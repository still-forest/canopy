name: CI (test suite)

on:
  pull_request:
    branches:
      - main
    paths:
      - "packages/**"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect file changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            primitives:
              - 'packages/primitives/**'
            forms:
              - 'packages/forms/**'
            charts:
              - 'packages/charts/**'

  test-suite:
    needs: detect-changes
    strategy:
      matrix:
        package: ${{ fromJSON(needs.detect-changes.outputs.packages) }}
        task: [audit, lint, test, build]
    runs-on: ubuntu-latest
    timeout-minutes: 5

    # Skip if no packages were changed
    if: ${{ needs.detect-changes.outputs.packages != '[]' }}

    defaults:
      run:
        working-directory: ./packages/${{ matrix.package }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.15.0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ${{ matrix.task }}
        run: |
          if [ "${{ matrix.task }}" == "audit" ]; then
            pnpm audit
          elif [ "${{ matrix.task }}" == "test" ]; then
            pnpm test
          elif [ "${{ matrix.task }}" == "lint" ]; then
            pnpm lint:ci
          elif [ "${{ matrix.task }}" == "build" ]; then
            pnpm build
          fi
